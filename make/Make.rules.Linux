# **********************************************************************
#
# Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
#
# **********************************************************************

#
# This file is included by Make.rules when uname is Linux.
#

USE_SPARC_ASM           = irrelevant
MACHINE                 = $(shell uname -m)
SUSE_i586               = $(shell grep i586 /etc/SuSE-release 2>/dev/null)

ifneq ($(shell grep 'release 4' /etc/redhat-release 2>/dev/null),)
   NPTL_LIB   = -L/usr/$(libsubdir)/nptl
   NPTL_FLAGS	= -I/usr/include/nptl
endif

#
# Default compiler is c++ (aka g++).
#
ifeq ($(CXX),)
   CXX			= g++
endif

ifeq ($(CXX),c++)
   CXX			= g++
endif

ifeq ($(CXX),clang++)
    GCC_COMPILER        = yes
endif

ifeq ($(CXX:g++%=g++),g++)
    GCC_COMPILER        = yes
endif

ifeq ($(GCC_COMPILER),yes)

    ifneq ($(SUSE_i586),)
        CXXARCHFLAGS	+= -march=i586
    endif

    ifeq ($(CPP11), yes)
        CXXFLAGS += -std=c++0x
    endif

    ifeq ($(MACHINE),sparc64)
        #
        # We are an ultra, at least, and so have the atomic instructions
        #
        $(warning ===================================================================)
        $(warning Linux on SPARC is currently unsupported. The Ice team does not)
        $(warning maintain SPARC specific portions of the source code or build)
        $(warning system. Contact sales@zeroc.com if you wish to sponsor official)
        $(warning support.)
        $(warning ===================================================================)
        USE_SPARC_ASM	= yes
        CXXARCHFLAGS	+= -mcpu=ultrasparc -pipe -Wno-deprecated -DUSE_SPARC_ASM
    endif

    ifeq ($(MACHINE),sparc)
        #
        # We are a sun4m or sun4c
        # On sun4m, there is a bug in some CPU/kernel/gcc configurations which
        # prevent us from using '-mcpu=v8'
        #
        $(warning ===================================================================)
        $(warning Linux on SPARC is currently unsupported. The Ice team does not)
        $(warning maintain SPARC specific portions of the source code or build)
        $(warning system. Contact sales@zeroc.com if you wish to sponsor official)
        $(warning support.)
        $(warning ===================================================================)
        USE_SPARC_ASM	= no
        CXXARCHFLAGS	+= -mtune=v8 -pipe -Wno-deprecated -DICE_USE_MUTEX_SHARED
    endif

    ifeq ($(MACHINE),x86_64)
        ifeq ($(LP64),yes)
            CXXARCHFLAGS	+= -m64
        else
            CXXARCHFLAGS	+= -m32
        endif
    endif

    CXXFLAGS		+= $(CXXARCHFLAGS) -fvisibility=hidden -Wall -Werror -Wextra -Wshadow -pthread

    GCC_GTEQ_460 := $(shell expr `gcc -dumpversion | sed -e 's/\.\([0-9][0-9]\)/\1/g' -e 's/\.\([0-9]\)/0\1/g' -e 's/^[0-9]\{3,4\}$$/&00/'` \>= 40600)
    ifeq ($(GCC_GTEQ_460),1)
	CXXFLAGS	+= -Wredundant-decls
    endif

    ifneq ($(GENPIC),no)
        CXXFLAGS		+= -fPIC
    endif

    ifeq ($(OPTIMIZE),yes)
        CXXFLAGS		+= -O2 -DNDEBUG
    else
        CXXFLAGS		+= -g
    endif

    #
    # Add RPATH to LDEXEFLAGS if embedded_runpath is set to yes
    #
    ifeq ($(embedded_runpath),yes)
        #
        # Unless new_dtags is set to yes we use old style dtags, to add a RPATH
        # entry instead of RUNPATH entry, this allow the plug-ins to load without
        # need to set LD_LIBRARY_PATH
        #
        ifeq ($(new_dtags),yes)
            DTAGS = -Wl,--enable-new-dtags
        else
            DTAGS = -Wl,--disable-new-dtags
        endif

        LDEXEFLAGS              = $(DTAGS) -Wl,-rpath,$(ice_lib_dir)
    endif

    #
    # C++ run-time libraries, necessary for linking some shared libraries.
    #
    CXXLIBS		=

    mkshlib		= $(CXX) -shared $(LDFLAGS) -o $(1) -Wl,-h,$(2) $(3) $(4)

    mklib		= ar cr $(1) $(2)

    LDPLATFORMFLAGS	+= -rdynamic

endif

ifeq ($(CXX),icpc)
   $(warning ===================================================================)
   $(warning Intel C++ is currently not supported. The Ice team does not)
   $(warning maintain Intel C++ specific portions of the source code or build)
   $(warning system.  Contact sales@zeroc.com if you wish to sponsor official)
   $(warning support.)
   $(warning ===================================================================)
   CXXFLAGS		= -D_REENTRANT

   ifneq ($(GENPIC),no)
      CXXFLAGS		+= -fPIC
   endif

   ifeq ($(OPTIMIZE),yes)
      CXXFLAGS		+= -O2 -DNDEBUG
   else
      CXXFLAGS		+= -g
   endif

   #
   # C++ run-time libraries, necessary for linking some shared libraries.
   #
   CXXLIBS		=

   mkshlib		= $(CXX) -shared $(LDFLAGS) -o $(1) -Wl,-h,$(2) $(3) $(4) -lpthread

   mklib		= ar cr $(1) $(2)

endif

BASELIBS		= -lIceUtil
ifneq ($(NPTL_LIB),)
    CXXFLAGS		+= $(NPTL_FLAGS)
    BASELIBS		:= $(NPTL_LIB) $(BASELIBS)
endif

ICESSL_LIBS             = $(OPENSSL_RPATH_LINK) -lIceSSL
LIBS			              = $(BZIP2_RPATH_LINK) -lIce $(BASELIBS)

ICEUTIL_OS_LIBS         = -lrt $(OPENSSL_RPATH_LINK) -lcrypto
ICE_OS_LIBS             = -ldl
