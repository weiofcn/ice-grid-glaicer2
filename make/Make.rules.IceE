# **********************************************************************
#
# Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
#
# **********************************************************************

BUILD_DEMOS                     ?= static

#
# Check if ICEE_TARGET_OS is correctly defined.
#
ifeq ($(filter $(ICEE_TARGET_OS),debian yocto),)
    $(error Invalid ICEE_TARGET_OS: '$(ICEE_TARGET_OS)' supported values are: 'debian' and 'yocto'. Review instructions in $(CURDIR)/Make.rules)
endif

#
# Check if DEPLOY_TARGET is set when using demo_deploy.
#
ifeq ($(filter $(MAKECMDGOALS),demo_deploy),demo_deploy)
    ifeq ($(DEPLOY_TARGET),)
        $(error You need to define DEPLOY_TARGET to use demo_deploy. Review instructions in $(CURDIR)/Make.rules)
    endif
endif

ifeq ($(ICEE_HOME),)
    ICEE_HOME                   = /usr
endif

ifeq ($(ICEE_TARGET_OS), debian)

    ifeq ($(filter $(HOST),arm-linux-gnueabihf x86_64-linux-gnu),)
        $(error Invalid HOST: `$(HOST)' supported values are: `arm-linux-gnueabihf' and `x86_64-linux-gnu')
    endif

    BUILD                       = $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
    ifeq ($(BUILD),$(HOST))
        CC                      = gcc
        CXX                     = g++
        STRIP                   = strip
    else
        CC                      = arm-linux-gnueabihf-gcc-4.9
        CXX                     = arm-linux-gnueabihf-g++-4.9
        STRIP                   = arm-linux-gnueabihf-strip
    endif

    icee_libdir                 = lib/$(HOST)
else
    ifneq ($(wildcard $(ICEE_HOME)/config/Make.yocto.rules),)
        #
        # String trailing and leading - in TARGET_PREFIX
        #
        icee_libdir             = lib/$(subst $(eval) ,-,$(strip $(subst -, ,$(TARGET_PREFIX))))
    else
        icee_libdir             = lib
        libsubdir               = lib
    endif
endif

ifneq ($(wildcard $(ICEE_HOME)/$(icee_libdir)/libIce.a),)
    libdir                      := $(ICEE_HOME)/$(icee_libdir)
    includedir                  := $(ICEE_HOME)/include
endif

ifneq ($(wildcard $(ICEE_HOME)/cpp/$(icee_libdir)/libIce.a),)
    libdir                      := $(ICEE_HOME)/cpp/$(icee_libdir)
    includedir                  := $(ICEE_HOME)/ice/cpp/include
endif

ifeq ($(libdir),)
    $(error Unable to find a valid Ice-E distribution, please verify ICEE_HOME is properly configured and Ice-E is correctly installed.)
endif

LDFLAGS				+= -pthread

ifeq ($(ICEE_HOME:%/=%),$(SDKTARGETSYSROOT)/usr)
    slicedir                    := $(ICEE_HOME)/share/Ice-$(VERSION)/slice
else
    slicedir                    := $(ICEE_HOME)/ice/slice
    LDFLAGS                     += -L$(libdir)
    CPPFLAGS                    += -I$(includedir)
endif

ifeq ($(BUILD_DEMOS),static)
    CXXFLAGS                    = -DICE_STATIC_LIBS
else
    CXXFLAGS                    = -fPIC
endif

ifeq ($(BUILD_DEMOS),static)
    ICE_LIBS                    = -lIce
else
    ICE_LIBS                    = -lIce -lIceUtil
endif

CXXFLAGS                        += -Wall -Werror -Wextra -Wshadow -pthread
LIBS                            = -Wl,-B$(BUILD_DEMOS) $(ICE_LIBS)

ifeq ($(BUILD_DEMOS),static)
LIBS                            += -Wl,-Bdynamic -lcrypto -lssl -lbz2 -ldl -lrt
endif

mkshlib                         = $(CXX) -shared $(LDFLAGS) -o $(1) -Wl,-h,$(2) $(3) $(4)

ifeq ($(OPTIMIZE),yes)
    CXXFLAGS                    += -Os -DNDEBUG -ffunction-sections -fdata-sections
    LDFLAGS                     += -Wl,--gc-sections
else
    CXXFLAGS                    += -g
endif

demo_deploy::
	rsync -aczv --prune-empty-dirs \
        --exclude="*.d" \
        --exclude="*.ico" \
        --exclude="*.rc" \
        --exclude="*.h" \
        --exclude="*.cpp" \
        --exclude="*.mak" \
        --exclude="*.o" \
        --exclude="Makefile" \
        --exclude=".git" \
        --exclude="*.vcxproj" \
        --exclude="*.vcxproj.filters" \
        --exclude="*.sln" \
        --exclude="csharp" \
        --exclude="java" \
        --exclude="objective-c" \
        --exclude="php" \
        --exclude="ruby" \
        --exclude="js" \
        --exclude="scripts" \
        --exclude="visualBasic" \
        --exclude="cpp/Chat/qtClient" \
        --exclude="cpp/IceGrid" \
        --exclude="cpp/IcePatch2" \
        --exclude="cpp/IceTouch" \
        --exclude="cpp/IceUtil" \
        --exclude="cpp/Ice/MFC" \
        --exclude="cpp/Ice/winrt" \
        --exclude="cpp/Glacier2/winrt" \
        --exclude="cpp/README.md" \
        .. $(DEPLOY_TARGET)
